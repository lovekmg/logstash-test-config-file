input {
	file {
		path => "/etc/logstash/conf.d/logstash-test-config-file/inputTestJson.json"
		start_position => "beginning"
		sincedb_path => "/dev/null"         # 매번 처음부터 다시 읽기 위해
		codec => "json"
	}
}

filter {
    # 주문 환불 index
    if [eventType] == "order" {             # if 문은 plugin 밖에서 감싼다
    }

    # 상품 주문 환불 index
    if [eventType] == "product" {
        mutate {
            # 값이 null 일 경우 기본값 설정해줌. null이면 에러나서 지정해주는게 좋을듯
            coerce => {
                "[context][channel]" => ""
            }

            # json object의 nested 한 구조를 1차원 구조로 변경하기 위해 copy. 
            # add_field보단 나음(data type 까지 복사함)
            copy => {
                "[context][ordId]"    => "ord_id"
                "[context][type]"     => "ord_type"
                "[context][ordPrdId]" => "ord_prd_id"
                "[context][price]"    => "ord_prd_price"
                "[context][amount]"   => "ord_stock"
                "[context][prdId]"    => "prd_id"
                "[context][guestId]"  => "guest_id"
                "[extra][shop_id]"    => "shop_id"
            }

            # 특정 필드 값을 이미 존재하는 필드에 덮어씌우기
            replace => {
                "channel" => "%{[context][channel]}"
            }

            # elasticsearch index에 맞는 data type 으로 변경
            convert => {
                "ord_id"        => "integer"
                "ord_prd_id"    => "integer"
                "ord_prd_price" => "integer"
                "ord_stock"     => "integer"
                "prd_id"        => "integer"
            }
        }

        # 결제 일 경우
        if [ord_type] == "pay" {
            mutate {
                add_field => {
                    "paid_at" => "%{[datetime]}"
                }
            }
        }

        # 환불 일 경우
        if [ord_type] == "refund" {
            mutate {
                add_field => {
                    "refunded_at" => "%{[datetime]}"
                }
            }
        }

        mutate {
            # 필요 없는 field는 삭제
            remove_field => [
                "context",
                "extra",
                "@timestamp", 
                "timestamp", 
                "datetime",
                "eventType",
                "level", 
                "pid", 
                "level_name", 
                "host", 
                "@version", 
                "path"
            ]
        }
    }
}


output {
    # filter 의 if 문과 동일하게 elasticsearch index값을 분기 처리해야함
    #if [eventType] == "product" {       # 상품 주문 환불 index
        #elasticsearch {
            #hosts => ["localhost:9200"]
            #index => "mysoho-statistics-product-order-%{yyyy.MM.dd}"
        #}
    #}

	stdout {
		codec => rubydebug
	}
}
